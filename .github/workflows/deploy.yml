name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: Roarbits_Backend

      - name: Build with Gradle
        run: ./gradlew --no-daemon bootJar -x test
        working-directory: Roarbits_Backend

      - name: Locate JAR
        run: echo "JAR=$(ls -t Roarbits_Backend/build/libs/*.jar | head -n1)" >> $GITHUB_ENV

      - name: Copy JAR to EC2 (atomic upload)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ${{ env.JAR }}
          target: /home/ec2-user/roarbits.jar.tmp
          overwrite: true

      - name: Restart app on EC2 with health check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: JWT_SECRET
          script_stop: true
          script: |
            set -e
            cd /home/ec2-user

            pkill -f 'roarbits.jar' || true

            mv -f roarbits.jar.tmp roarbits.jar

            if [ -n "${JWT_SECRET}" ]; then
              export JWT_SECRET="${JWT_SECRET}"
            fi

            nohup java -Djava.net.preferIPv4Stack=true -jar /home/ec2-user/roarbits.jar > /home/ec2-user/app.log 2>&1 &

            for i in $(seq 1 40); do
              code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/actuator/health || true)
              if [ "$code" = "200" ]; then
                echo "health:$code"
                exit 0
              fi
              sleep 1
            done

            echo "health:timeout"
            tail -n 200 /home/ec2-user/app.log
            exit 1
